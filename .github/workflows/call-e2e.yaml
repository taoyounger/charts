name: Call E2E

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'project name.[ leave empty for all projects]'
        required: false
      ref:
        description: 'branch name, tag or sha'
        required: true
        default: main
  workflow_call:
    inputs:
      project:
        required: false
        type: string
      ref:
        required: true
        type: string

permissions: write-all

jobs:
  e2e:
    runs-on: ubuntu-22.04
    outputs:
      ref: ${{ steps.get_ref.outputs.tag }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by self workflow_dispatch"
              if ${{ github.event.inputs.project == '' }} ; then
                  echo "project_list=" >> $GITHUB_ENV
              else
                  echo "project_list=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
              fi
              echo "tag=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
          else
              echo "trigger by workflow_call"
              echo "project_list=${{ inputs.project }}" >> $GITHUB_ENV
              echo "tag=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          fi

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ steps.get_ref.outputs.tag }}

      - name: Check Project
        id: project
        run: |
          PLIST="${{ steps.get_ref.outputs.project_list }}"
          if [ -z "$PLIST" ] ; then
              TMP=`ls`
              for ITEM in $TMP ; do
                  [ -d "${ITEM}/chart" ] && PLIST+=" ${ITEM} "
              done          
          fi
          # check project existence
          echo "check PROJECT_LIST : ${PLIST} "
          for ITEM in ${PLIST} ; do
              [ ! -d "${ITEM}/chart" ] && echo "error, did not find project chart ${ITEM} " && exit 1
          done
          echo "project_list=${PLIST}" >> $GITHUB_ENV
          exit 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.5

      - name: install docker
        uses: docker-practice/actions-setup-docker@master

      - name: Install Kind
        uses: helm/kind-action@v1.5.0
        with:
          install_only: true

      - name: Install tools
        run: |
          bash ./test/scripts/install-tools.sh

      - name: Run E2E
        run: |
            echo "run e2e for porject: ${{ steps.project.outputs.project_list }}"
            make e2e -e PROJECT='${{ steps.project.outputs.project_list }}' || exit 1
            exit 0
